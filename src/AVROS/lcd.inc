/*
 * lcd.inc
 *
 *  Created: 5/19/2013 11:42:10 AM
 *   Author: Hamid Reza Mehrabian
 */ 
 .EQU	LCD_PORT = PORTC
.EQU	LCD_PORT_IN = PINC
.EQU	DDRLCD = DDRC
.EQU	LCD_RS	 = 0
.EQU	LCD_RW	 = 1
.EQU	LCD_EN	 = 2

.MACRO	LDELAY	; LDELAY time ~= (high(a)+8)*8*(low(a)+2)/freq ; for example for have 1s LDELAY on 8MHz , we need to 8 time call this macro , 7->0xFFFF 1->0xFFAC.
	PUSH	C
	PUSH	D
	PUSH	A
	LDI		C,LOW(@0)
	LDI		D,HIGH(@0)
	CPI		D,0
	BRNE	LDELAY_start
	INC		D
LDELAY_start:
	MOV		A,D
loop1:
	DEC		C
	MOV		D,A
loop2:
	DEC		D
	NOP
	NOP
	NOP
	NOP
	NOP
	BRNE	loop2
	TST		C
	BRNE	loop1
	POP		A
	POP		D
	POP		C
.ENDMACRO

LCD_PUTF:
	PUSH	A
	PUSH	B
	PUSH	ZH
	PUSH	ZL
	LDI		B,0
LCD_NCF:
	INC		B
	LPM		A,Z+
	TST		A
	BREQ	END_PLF
	CPI		A,0x10
	BRNE	NOT_NLF
	RCALL	LCD_L2
	JMP		IS_NLF
NOT_NLF:
	CPI		B,0x11
	BRNE	IS_NL0F
	LDI		B,0
	RCALL	LCD_L2
IS_NL0F:
	RCALL	LCD_PUTC
IS_NLF:	
	JMP		LCD_NCF
END_PLF:
	POP		ZL
	POP		ZH
	POP		B
	POP		A
RET

LCD_PUTS:
	PUSH	A
	PUSH	B
	LDI		B,0
LCD_NCS:
	INC		B
	LD		A,X+
	TST		A
	BREQ	END_PLS
	RCALL	LCD_PUTC
	JMP		LCD_NCS
END_PLS:
	POP		B
	POP		A
RET

LCD_INIT:
	LDELAY   0xEFFF
	LDI		A,0x30
	OUT     LCD_PORT,A
	LDELAY   0xEFFF

   CBI      LCD_PORT,LCD_RS 
   CBI      LCD_PORT,LCD_RW 
   CBI      LCD_PORT,LCD_EN 
   LDELAY   0x02FF   ; wait 4 us
   LDI      A,0x20  ; set 4-bit mode
   OUT      LCD_PORT,A 
   SBI      LCD_PORT,LCD_EN 
   LDELAY   0x55FF 
   CBI      LCD_PORT,LCD_EN 
   LDI      A,0 
   OUT      LCD_PORT,A  ; clear data pins
   LDI      A,0x28  ; entry mode set
   RCALL   LCD_SEND_COMMAND
   LDI      A,0x0E  ; entry mode set
   RCALL   LCD_SEND_COMMAND 
   LDI      A,0x01  ; clear LCD
   RCALL   LCD_SEND_COMMAND 
   LDI      A,0x06  ; turns on LCD
   RCALL   LCD_SEND_COMMAND 
   RET 

LCD_SEND_DATA:
	PUSH	B
	PUSH	C
	PUSH	D
	MOV		C,A
	MOV		D,A
	ANDI	C,0xF0
	ANDI	D,0x0F
	CBI		LCD_PORT,LCD_RS
	CBI		LCD_PORT,LCD_RW
	CBI		LCD_PORT,LCD_EN
	LDELAY	0x1813
	SBI		LCD_PORT,LCD_RS
	LDELAY	0x1813
	ORI		C,1<<LCD_RS
	OUT		LCD_PORT,C
	SBI		LCD_PORT,LCD_EN
	LDELAY	0x1813
	CBI		LCD_PORT,LCD_EN
	LDELAY	0x1813
	SWAP	D
	ORI		D,1<<LCD_RS
	OUT		LCD_PORT,D
	SBI		LCD_PORT,LCD_EN
	LDELAY	0x1813
	CBI		LCD_PORT,LCD_EN
	LDI		B,0
	OUT		LCD_PORT,B
	POP		D
	POP		C
	POP		B
	RET

LCD_SEND_COMMAND:
	PUSH	B
	PUSH	C
	PUSH	D
	MOV		C,A
	MOV		D,A
	ANDI	C,0xF0
	ANDI	D,0x0F
	CBI		LCD_PORT,LCD_RS
	CBI		LCD_PORT,LCD_RW
	CBI		LCD_PORT,LCD_EN
	OUT		LCD_PORT,C
	SBI		LCD_PORT,LCD_EN
	LDELAY	0x1813
	CBI		LCD_PORT,LCD_EN
	SWAP	D
	OUT		LCD_PORT,D
	SBI		LCD_PORT,LCD_EN
	LDELAY	0x1813
	CBI		LCD_PORT,LCD_EN
	LDI		B,0
	OUT		LCD_PORT,B
	POP		D
	POP		C
	POP		B
	RET

LCD_READ:
	PUSH	B
	LDI		A,0x0F
	OUT		DDRLCD,A
	CBI		LCD_PORT,LCD_RS
	CBI		LCD_PORT,LCD_EN
	CBI		LCD_PORT,LCD_RW
	LDELAY	0x1813
	SBI		LCD_PORT,LCD_RW
	SBI		LCD_PORT,LCD_EN
	LDELAY	0x1813
	IN		A,LCD_PORT_IN
	CBI		LCD_PORT,LCD_EN
	LDELAY	0x1813
	SBI		LCD_PORT,LCD_EN
	LDELAY	0x1813
	IN		B,LCD_PORT_IN
	CBI		LCD_PORT,LCD_EN
	CBI		LCD_PORT,LCD_RW
	LDELAY	0x1813
	ANDI	A,0xF0
	ANDI	B,0x0F
	OR		A,B
	LDI		B,0xFF
	OUT		DDRLCD,B
	POP		B
	RET

LCD_WAIT:
	PUSH	A
LCD_WAITAA:
	RCALL	LCD_READ
	ANDI	A,0B10000000
	CPI		A,0B10000000
	BREQ	LCD_WAITAA
	POP		A
	RET

LCD_HOME:
	PUSH	A
	LDI		A,0x80
	RCALL	LCD_SEND_COMMAND
	RCALL	LCD_WAIT
	POP		A
	RET

LCD_CLS:
	PUSH	A
	LDI		A,0x01
	CALL	LCD_SEND_COMMAND
	CALL	LCD_WAIT
	POP		A
	RET

LCD_L2:
	PUSH	A
	LDI		A,0xC0
	RCALL	LCD_SEND_COMMAND
	RCALL	LCD_WAIT
	POP		A
	RET

LCD_CSL:
	PUSH	A
	LDI		A,0x10
	RCALL	LCD_SEND_COMMAND
	RCALL	LCD_WAIT
	POP		A
	RET

LCD_CSR:
	PUSH	A
	LDI		A,0x14
	RCALL	LCD_SEND_COMMAND
	RCALL	LCD_WAIT
	POP		A
	RET

LCD_TSR:
	PUSH	A
	LDI		A,0x1C
	RCALL	LCD_SEND_COMMAND
	RCALL	LCD_WAIT
	POP		A
	RET

LCD_TSL:
	PUSH	A
	LDI		A,0x18
	RCALL	LCD_SEND_COMMAND
	RCALL	LCD_WAIT
	POP		A
	RET

LCD_PUTC:
	RCALL	LCD_SEND_DATA
	RCALL	LCD_WAIT
	RET
